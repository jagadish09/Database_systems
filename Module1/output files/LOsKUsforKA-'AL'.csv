"LONO","LO","TIER","LOLEVEL","KUID","KUID_1","KU","KA","MINTIER1","MINTIER2","KACODE","KANAME"
1,"Explain what is meant by best, expected, and worst case behavior of an algorithm.",1,"Familiarity",1,1,"Basic Analysis","AL",2,2,"AL"," Algorithms and Complexity"
2,"In the context of specific algorithms, identify the characteristics of data and/or other conditions or assumptions that lead to different behaviors.",1,"Assessment",1,1,"Basic Analysis","AL",2,2,"AL"," Algorithms and Complexity"
3,"Determine informally the time and space complexity of simple algorithms.",1,"Usage",1,1,"Basic Analysis","AL",2,2,"AL"," Algorithms and Complexity"
4,"State the formal definition of big O.",1,"Familiarity",1,1,"Basic Analysis","AL",2,2,"AL"," Algorithms and Complexity"
5,"List and contrast standard complexity classes.",1,"Familiarity",1,1,"Basic Analysis","AL",2,2,"AL"," Algorithms and Complexity"
6,"Perform empirical studies to validate hypotheses about runtime stemming from mathematical analysis  Run algorithms on input of various sizes and compare performance.",1,"Assessment",1,1,"Basic Analysis","AL",2,2,"AL"," Algorithms and Complexity"
7,"Give examples that illustrate time-space trade-offs of algorithms.",1,"Familiarity",1,1,"Basic Analysis","AL",2,2,"AL"," Algorithms and Complexity"
8,"Use big O notation formally to give asymptotic upper bounds on time and space complexity of algorithms.",2,"Usage",1,1,"Basic Analysis","AL",2,2,"AL"," Algorithms and Complexity"
9,"Use big O notation formally to give expected case bounds on time complexity of algorithms.",2,"Usage",1,1,"Basic Analysis","AL",2,2,"AL"," Algorithms and Complexity"
10,"Explain the use of big omega, big theta, and little o notation to describe the amount of work done by an algorithm.",2,"Familiarity",1,1,"Basic Analysis","AL",2,2,"AL"," Algorithms and Complexity"
11,"Use recurrence relations to determine the time complexity of recursively defined algorithms.",2,"Usage",1,1,"Basic Analysis","AL",2,2,"AL"," Algorithms and Complexity"
12,"Solve elementary recurrence relations, eg, using some form of a Master Theorem.",2,"Usage",1,1,"Basic Analysis","AL",2,2,"AL"," Algorithms and Complexity"
1,"For each of the strategies (brute-force, greedy, divide-and-conquer, recursive backtracking, and dynamic programming), identify a practical example to which it would apply.",1,"Familiarity",2,2,"Algorithmic Strategies","AL",5,1,"AL"," Algorithms and Complexity"
2,"Use a greedy approach to solve an appropriate problem and determine if the greedy rule chosen leads to an optimal solution.",1,"Assessment",2,2,"Algorithmic Strategies","AL",5,1,"AL"," Algorithms and Complexity"
3,"Use a divide-and-conquer algorithm to solve an appropriate problem.",1,"Usage",2,2,"Algorithmic Strategies","AL",5,1,"AL"," Algorithms and Complexity"
4,"Use recursive backtracking to solve a problem such as navigating a maze.",1,"Usage",2,2,"Algorithmic Strategies","AL",5,1,"AL"," Algorithms and Complexity"
5,"Use dynamic programming to solve an appropriate problem.",1,"Usage",2,2,"Algorithmic Strategies","AL",5,1,"AL"," Algorithms and Complexity"
6,"Determine an appropriate algorithmic approach to a problem.",1,"Assessment",2,2,"Algorithmic Strategies","AL",5,1,"AL"," Algorithms and Complexity"
7,"Describe various heuristic problem-solving methods.",2,"Familiarity",2,2,"Algorithmic Strategies","AL",5,1,"AL"," Algorithms and Complexity"
8,"Use a heuristic approach to solve an appropriate problem.",2,"Usage",2,2,"Algorithmic Strategies","AL",5,1,"AL"," Algorithms and Complexity"
9,"Describe the trade-offs between brute force and heuristic strategies.",2,"Assessment",2,2,"Algorithmic Strategies","AL",5,1,"AL"," Algorithms and Complexity"
10,"Describe how a branch-and-bound approach may be used to improve the performance of a heuristic method.",2,"Familiarity",2,2,"Algorithmic Strategies","AL",5,1,"AL"," Algorithms and Complexity"
1,"Implement basic numerical algorithms.",1,"Usage",3,3,"Fundamental Data Structures and Algorithms","AL",9,3,"AL"," Algorithms and Complexity"
2,"Implement simple search algorithms and explain the differences in their time complexities.",1,"Assessment",3,3,"Fundamental Data Structures and Algorithms","AL",9,3,"AL"," Algorithms and Complexity"
3,"Be able to implement common quadratic and O(N log N) sorting algorithms.",1,"Usage",3,3,"Fundamental Data Structures and Algorithms","AL",9,3,"AL"," Algorithms and Complexity"
4,"Describe the implementation of hash tables, including collision avoidance and resolution.",1,"Familiarity",3,3,"Fundamental Data Structures and Algorithms","AL",9,3,"AL"," Algorithms and Complexity"
5,"Discuss the runtime and memory efficiency of principal algorithms for sorting, searching, and hashing.",1,"Familiarity",3,3,"Fundamental Data Structures and Algorithms","AL",9,3,"AL"," Algorithms and Complexity"
6,"Discuss factors other than computational efficiency that influence the choice of algorithms, such as programming time, maintainability, and the use of application-specific patterns in the input data.",1,"Familiarity",3,3,"Fundamental Data Structures and Algorithms","AL",9,3,"AL"," Algorithms and Complexity"
7,"Explain how tree balance affects the efficiency of various binary search tree operations.",1,"Familiarity",3,3,"Fundamental Data Structures and Algorithms","AL",9,3,"AL"," Algorithms and Complexity"
8,"Solve problems using fundamental graph algorithms, including depth-first and breadth-first search.",1,"Usage",3,3,"Fundamental Data Structures and Algorithms","AL",9,3,"AL"," Algorithms and Complexity"
9,"Demonstrate the ability to evaluate algorithms, to select from a range of possible options, to provide justification for that selection, and to implement the algorithm in a particular context.",2,"Assessment",3,3,"Fundamental Data Structures and Algorithms","AL",9,3,"AL"," Algorithms and Complexity"
10,"Describe the heap property and the use of heaps as an implementation of priority queues.",2,"Familiarity",3,3,"Fundamental Data Structures and Algorithms","AL",9,3,"AL"," Algorithms and Complexity"
11,"Solve problems using graph algorithms, including single-source and all-pairs shortest paths, and at least one minimum spanning tree algorithm.",2,"Usage",3,3,"Fundamental Data Structures and Algorithms","AL",9,3,"AL"," Algorithms and Complexity"
12,"Trace and/or implement a string-matching algorithm.",2,"Usage",3,3,"Fundamental Data Structures and Algorithms","AL",9,3,"AL"," Algorithms and Complexity"
1,"Discuss the concept of finite state machines.",1,"Familiarity",4,4,"Basic Automata Computability and Complexity","AL",3,3,"AL"," Algorithms and Complexity"
2,"Design a deterministic finite state machine to accept a specified language.",1,"Usage",4,4,"Basic Automata Computability and Complexity","AL",3,3,"AL"," Algorithms and Complexity"
3,"Generate a regular expression to represent a specified language.",1,"Usage",4,4,"Basic Automata Computability and Complexity","AL",3,3,"AL"," Algorithms and Complexity"
4,"Explain why the halting problem has no algorithmic solution.",1,"Familiarity",4,4,"Basic Automata Computability and Complexity","AL",3,3,"AL"," Algorithms and Complexity"
5,"Design a context-free grammar to represent a specified language.",2,"Usage",4,4,"Basic Automata Computability and Complexity","AL",3,3,"AL"," Algorithms and Complexity"
6,"Define the classes P and NP.",2,"Familiarity",4,4,"Basic Automata Computability and Complexity","AL",3,3,"AL"," Algorithms and Complexity"
7,"Explain the significance of NP-completeness.",2,"Familiarity",4,4,"Basic Automata Computability and Complexity","AL",3,3,"AL"," Algorithms and Complexity"
1,"Define the classes P and NP (Also appears in AL/Basic Automata, Computability, and Complexity).",3,"Familiarity",5,5,"Advanced Computational Complexity","AL",0,0,"AL"," Algorithms and Complexity"
2,"Define the P-space class and its relation to the EXP class.",3,"Familiarity",5,5,"Advanced Computational Complexity","AL",0,0,"AL"," Algorithms and Complexity"
3,"Explain the significance of NP-completeness (Also appears in AL/Basic Automata, Computability, and Complexity).",3,"Familiarity",5,5,"Advanced Computational Complexity","AL",0,0,"AL"," Algorithms and Complexity"
4,"Provide examples of classic NP-complete problems.",3,"Familiarity",5,5,"Advanced Computational Complexity","AL",0,0,"AL"," Algorithms and Complexity"
5,"Prove that a problem is NP-complete by reducing a classic known NP-complete problem to it.",3,"Usage",5,5,"Advanced Computational Complexity","AL",0,0,"AL"," Algorithms and Complexity"
1,"Determine a language’s place in the Chomsky hierarchy (regular, context-free, recursively enumerable).",3,"Assessment",6,6,"Advanced Automata Theory and Computability","AL",0,0,"AL"," Algorithms and Complexity"
2,"Convert among equivalently powerful notations for a language, including among DFAs, NFAs, and regular expressions, and between PDAs and CFGs.",3,"Usage",6,6,"Advanced Automata Theory and Computability","AL",0,0,"AL"," Algorithms and Complexity"
3,"Explain the Church-Turing thesis and its significance.",3,"Familiarity",6,6,"Advanced Automata Theory and Computability","AL",0,0,"AL"," Algorithms and Complexity"
4,"Explain Rice’s Theorem and its significance.",3,"Familiarity",6,6,"Advanced Automata Theory and Computability","AL",0,0,"AL"," Algorithms and Complexity"
5,"Provide examples of uncomputable functions.",3,"Familiarity",6,6,"Advanced Automata Theory and Computability","AL",0,0,"AL"," Algorithms and Complexity"
6,"Prove that a problem is uncomputable by reducing a classic known uncomputable problem to it.",3,"Usage",6,6,"Advanced Automata Theory and Computability","AL",0,0,"AL"," Algorithms and Complexity"
1,"Understand the mapping of real-world problems to algorithmic solutions (eg, as graph problems, linear programs, etc).",3,"Assessment",7,7,"Advanced Data Structures Algorithms and Analysis","AL",0,0,"AL"," Algorithms and Complexity"
2,"Select and apply advanced algorithmic techniques (eg, randomization, approximation) to solve real problems.",3,"Assessment",7,7,"Advanced Data Structures Algorithms and Analysis","AL",0,0,"AL"," Algorithms and Complexity"
3,"Select and apply advanced analysis techniques (eg, amortized, probabilistic, etc) to algorithms.",3,"Assessment",7,7,"Advanced Data Structures Algorithms and Analysis","AL",0,0,"AL"," Algorithms and Complexity"
